{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","uri","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","className","href","substr","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2OAyFeA,UA/Ef,YAAiE,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,IACjDC,EAAOJ,EAAKK,eACZC,EAAYN,EAAKO,KAAKC,aAAaC,MACjCC,EAAmBT,EAAnBS,SAAUC,EAASV,EAATU,KAElB,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUO,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGhB,uBACEC,UAAU,eACVC,KAAI,mEAAqEjB,EAAIkB,OAC3E,GADE,aAFN,KAQCjB,EAAKQ,YAAYH,OAEpB,uBACEM,MAAK,iBACAO,aAAM,IADN,CAEHC,QAAQ,QACRL,aAAcD,YAAO,MAGtBb,EAAKQ,YAAYY,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQtB,EAAKuB,QACjD,gCACE,kBAAC,IAAD,MACA,yBAAKR,UAAU,iCAOnB,6BACE,wBACEJ,MAAO,CACLQ,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CAAMsB,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAApC,KACKzB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMqB,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKC,YAAYH,MADpB,WAaP,IAAM2B,EAAS","file":"component---src-templates-blog-post-js-19f8e450b33d2aa3f7b7.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n// import GithubConversation from '../components/github-conversation'\n// import Conversation from '../components/conversation'\n\nfunction BlogPostTemplate({ data, pageContext, location, uri }) {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            <a\n              className=\"editPostLink\"\n              href={`https://github.com/dutzi/dutzi.github.io/edit/site/content/blog/${uri.substr(\n                1\n              )}/index.md`}\n            >\n              ✎\n            </a>\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <footer>\n          <Bio />\n          <div className=\"conversation-outer-wrapper\">\n            {/* <GithubConversation issueNumber={post.frontmatter.issue} /> */}\n            {/* <Conversation issueNumber={post.frontmatter.issue} /> */}\n          </div>\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        issue\n      }\n    }\n  }\n`\n"],"sourceRoot":""}