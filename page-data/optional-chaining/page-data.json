{"componentChunkName":"component---src-templates-blog-post-js","path":"/optional-chaining/","result":{"data":{"site":{"siteMetadata":{"title":"Things I've Learnt"}},"markdownRemark":{"id":"e52ef21a-630a-5f77-8669-2f4e910b70f3","excerpt":"Syntax Getting Props Setting Props Optional chaining cannot appear in the left hand side of an assignment operator. Arrays Calling Methods More Examples Willâ€¦","html":"<h2>Syntax</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">obj<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>prop\nobj<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>expr<span class=\"token punctuation\">]</span>\narr<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\nfunc<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Getting Props</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  prop1<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    prop2<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      prop3<span class=\"token punctuation\">:</span> <span class=\"token string\">'nested-value'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">obj<span class=\"token punctuation\">.</span>doesNotExist<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>prop2<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>prop3 <span class=\"token comment\">// undefined</span>\nobj<span class=\"token punctuation\">.</span>doesNotExist<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>prop2<span class=\"token punctuation\">.</span>prop3  <span class=\"token comment\">// undefined, doesn't throw</span>\nobj<span class=\"token punctuation\">.</span>doesNotExist<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token string\">'prop2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>prop3  <span class=\"token comment\">// undefined</span></code></pre></div>\n<h2>Setting Props</h2>\n<p>Optional chaining cannot appear in the left hand side of an assignment operator.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">obj<span class=\"token punctuation\">.</span>prop1<span class=\"token punctuation\">.</span>prop2<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>prop3 <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">// throws compile time error</span></code></pre></div>\n<h2>Arrays</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> myClass <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  students<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Gilfoyle'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">myClass<span class=\"token punctuation\">.</span>students<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// { name: 'Gilfoyle' }</span>\nmyClass<span class=\"token punctuation\">.</span>teachers<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<h2>Calling Methods</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-api'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">api<span class=\"token punctuation\">.</span>init<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// calls init</span>\napi<span class=\"token punctuation\">.</span>destroy<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\napi<span class=\"token punctuation\">.</span>name<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// throws type error</span></code></pre></div>\n<h2>More Examples</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">myClass<span class=\"token punctuation\">.</span>students<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>name</code></pre></div>\n<p>Will return undefined if:</p>\n<ul>\n<li><code class=\"language-text\">students</code> is undefined</li>\n<li><code class=\"language-text\">students[0]</code> is undefined</li>\n<li><code class=\"language-text\">students[0].name</code> is undefined</li>\n</ul>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> nullish <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n<span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nnullish<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>counter<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// undefined</span>\ncounter              <span class=\"token comment\">// 0</span></code></pre></div>","frontmatter":{"title":"Optional Chaining Do's and Dont's","date":"January 05, 2020","description":"A quick reference guide (or Cheat Sheet) for Optional Chaining"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/optional-chaining/","previous":{"fields":{"slug":"/building-firebase-functions-declarations/"},"frontmatter":{"title":"Things I've Learnt Building Firebase Functions Declarations"}},"next":null}}}